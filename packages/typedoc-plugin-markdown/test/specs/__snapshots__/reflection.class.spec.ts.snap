// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Class Reflection should compile abstract class: (Output File Strategy "members") (Option Group "1") 1`] = `
"**typedoc-stubs** ∙ [README](../README.md) ∙ [API](../exports.md)

***

[API](../exports.md) > AbstractClass

# Class: \`abstract\` AbstractClass

## Contents

- [Extended By](AbstractClass.md#extended-by)
- [Constructors](AbstractClass.md#constructors)
  - [new AbstractClass()](AbstractClass.md#new-abstractclass)
- [Properties](AbstractClass.md#properties)
  - [\`abstract\` abstractProp](AbstractClass.md#abstract-abstractprop)
- [Methods](AbstractClass.md#methods)
  - [\`abstract\` abstractMethod()](AbstractClass.md#abstract-abstractmethod)

## Extended By

- [\`DerivedClassA\`](DerivedClassA.md)
- [\`DerivedClassB\`](DerivedClassB.md)

## Constructors

### new AbstractClass()

> **new AbstractClass**(): [\`AbstractClass\`](AbstractClass.md)

## Properties

### \`abstract\` abstractProp

> **\`abstract\`** **abstractProp**: \`string\`

Comments for abstractProp

#### Source

[classes.ts:9](source-url)

## Methods

### \`abstract\` abstractMethod()

> **\`abstract\`** **abstractMethod**(): \`string\`

Comments for abstractMethod

#### Source

[classes.ts:14](source-url)
"
`;

exports[`Class Reflection should compile abstract class: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

[API](../index.md) > AbstractClass

# \`abstract\` AbstractClass

## Contents

- [Extended By](AbstractClass.md#extended-by)
- [Constructors](AbstractClass.md#constructors)
  - [new AbstractClass()](AbstractClass.md#new-abstractclass)
- [Properties](AbstractClass.md#properties)
- [Methods](AbstractClass.md#methods)
  - [\`abstract\` abstractMethod()](AbstractClass.md#abstract-abstractmethod)

## Extended By

- [\`DerivedClassA\`](DerivedClassA.md)
- [\`DerivedClassB\`](DerivedClassB.md)

## Constructors

### new AbstractClass()

\`\`\`ts
new AbstractClass(): AbstractClass
\`\`\`

## Properties

| Modifier | Property | Type | Description |
| :------ | :------ | :------ | :------ |
| \`abstract\` | \`abstractProp\` | \`string\` | Comments for abstractProp |

## Methods

### \`abstract\` abstractMethod()

\`\`\`ts
abstract abstractMethod(): string
\`\`\`

Comments for abstractMethod

***

Generated using [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown) and [TypeDoc](https://typedoc.org/)
"
`;

exports[`Class Reflection should compile class with accessors: (Output File Strategy "members") (Option Group "1") 1`] = `
"**typedoc-stubs** ∙ [README](../README.md) ∙ [API](../exports.md)

***

[API](../exports.md) > ClassWithAccessors

# Class: ClassWithAccessors

Comments for ClassWithAccessors

## Contents

- [Constructors](ClassWithAccessors.md#constructors)
  - [new ClassWithAccessors()](ClassWithAccessors.md#new-classwithaccessors)
- [Properties](ClassWithAccessors.md#properties)
  - [privateProp](ClassWithAccessors.md#privateprop)
- [Accessors](ClassWithAccessors.md#accessors)
  - [accessor](ClassWithAccessors.md#accessor)
  - [noGetter](ClassWithAccessors.md#nogetter)
  - [noSetter](ClassWithAccessors.md#nosetter)

## Constructors

### new ClassWithAccessors()

> **new ClassWithAccessors**(): [\`ClassWithAccessors\`](ClassWithAccessors.md)

## Properties

### privateProp

> **\`private\`** **privateProp**: \`string\`

#### Source

[classes.ts:72](source-url)

## Accessors

### accessor

> **\`get\`** **accessor**(): \`string\`

Comments for getter

> **\`set\`** **accessor**(\`value\`): \`void\`

Comments for setter

#### Parameters

▪ **value**: \`string\`

Param comments

#### Source

[classes.ts:76](source-url)

***

### noGetter

> **\`set\`** **noGetter**(\`x\`): \`void\`

#### Parameters

▪ **x**: \`string\`

#### Source

[classes.ts:92](source-url)

***

### noSetter

> **\`get\`** **noSetter**(): \`string\`

#### Source

[classes.ts:88](source-url)
"
`;

exports[`Class Reflection should compile class with accessors: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

[API](../index.md) > ClassWithAccessors

# ClassWithAccessors

Comments for ClassWithAccessors

## Contents

- [Constructors](ClassWithAccessors.md#constructors)
  - [new ClassWithAccessors()](ClassWithAccessors.md#new-classwithaccessors)
- [Properties](ClassWithAccessors.md#properties)
- [Accessors](ClassWithAccessors.md#accessors)
  - [accessor](ClassWithAccessors.md#accessor)
  - [noGetter](ClassWithAccessors.md#nogetter)
  - [noSetter](ClassWithAccessors.md#nosetter)

## Constructors

### new ClassWithAccessors()

\`\`\`ts
new ClassWithAccessors(): ClassWithAccessors
\`\`\`

## Properties

| Modifier | Property | Type | Description |
| :------ | :------ | :------ | :------ |
| \`private\` | \`privateProp\` | \`string\` | - |

## Accessors

### accessor

\`\`\`ts
get accessor(): string
\`\`\`

Comments for getter

\`\`\`ts
set accessor(value): void
\`\`\`

Comments for setter

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`value\` | \`string\` | Param comments |

***

### noGetter

\`\`\`ts
set noGetter(x): void
\`\`\`

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`x\` | \`string\` |

***

### noSetter

\`\`\`ts
get noSetter(): string
\`\`\`

***

Generated using [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown) and [TypeDoc](https://typedoc.org/)
"
`;

exports[`Class Reflection should compile class with constructor overloads: (Output File Strategy "members") (Option Group "1") 1`] = `
"**typedoc-stubs** ∙ [README](../README.md) ∙ [API](../exports.md)

***

[API](../exports.md) > ClassWithConstructorOverloads

# Class: ClassWithConstructorOverloads

Comments for ClassWithConstructorOverloads

## Contents

- [Constructors](ClassWithConstructorOverloads.md#constructors)
  - [new ClassWithConstructorOverloads(x, y)](ClassWithConstructorOverloads.md#new-classwithconstructoroverloadsx-y)
  - [new ClassWithConstructorOverloads(x)](ClassWithConstructorOverloads.md#new-classwithconstructoroverloadsx)
  - [new ClassWithConstructorOverloads(s)](ClassWithConstructorOverloads.md#new-classwithconstructoroverloadss)

## Constructors

### new ClassWithConstructorOverloads(x, y)

> **new ClassWithConstructorOverloads**(\`x\`, \`y\`): [\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Parameters

▪ **x**: \`number\`

Comments for x number

▪ **y**: \`string\`

#### Source

[classes.ts:50](source-url)

### new ClassWithConstructorOverloads(x)

> **new ClassWithConstructorOverloads**(\`x\`): [\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Parameters

▪ **x**: \`string\`

Comments for x string

#### Source

[classes.ts:55](source-url)

### new ClassWithConstructorOverloads(s)

> **new ClassWithConstructorOverloads**(\`s\`): [\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Parameters

▪ **s**: \`string\`

#### Source

[classes.ts:56](source-url)
"
`;

exports[`Class Reflection should compile class with constructor overloads: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

[API](../index.md) > ClassWithConstructorOverloads

# ClassWithConstructorOverloads

Comments for ClassWithConstructorOverloads

## Contents

- [Constructors](ClassWithConstructorOverloads.md#constructors)
  - [new ClassWithConstructorOverloads(x, y)](ClassWithConstructorOverloads.md#new-classwithconstructoroverloadsx-y)
  - [new ClassWithConstructorOverloads(x)](ClassWithConstructorOverloads.md#new-classwithconstructoroverloadsx)
  - [new ClassWithConstructorOverloads(s)](ClassWithConstructorOverloads.md#new-classwithconstructoroverloadss)

## Constructors

### new ClassWithConstructorOverloads(x, y)

\`\`\`ts
new ClassWithConstructorOverloads(x, y): ClassWithConstructorOverloads
\`\`\`

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`x\` | \`number\` | Comments for x number |
| \`y\` | \`string\` |  |

### new ClassWithConstructorOverloads(x)

\`\`\`ts
new ClassWithConstructorOverloads(x): ClassWithConstructorOverloads
\`\`\`

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`x\` | \`string\` | Comments for x string |

### new ClassWithConstructorOverloads(s)

\`\`\`ts
new ClassWithConstructorOverloads(s): ClassWithConstructorOverloads
\`\`\`

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`s\` | \`string\` |

***

Generated using [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown) and [TypeDoc](https://typedoc.org/)
"
`;

exports[`Class Reflection should compile class with modifiers: (Output File Strategy "members") (Option Group "1") 1`] = `
"**typedoc-stubs** ∙ [README](../README.md) ∙ [API](../exports.md)

***

[API](../exports.md) > ClassWithModifiers

# Class: \`abstract\` ClassWithModifiers

Comments for ClassWithModifiers

## Contents

- [Constructors](ClassWithModifiers.md#constructors)
  - [new ClassWithModifiers()](ClassWithModifiers.md#new-classwithmodifiers)
- [Properties](ClassWithModifiers.md#properties)
  - [privateProp](ClassWithModifiers.md#privateprop)
  - [protectedProp](ClassWithModifiers.md#protectedprop)
  - [publicPropWithDefault](ClassWithModifiers.md#publicpropwithdefault)
  - [readonlyProp](ClassWithModifiers.md#readonlyprop)
  - [staticProp](ClassWithModifiers.md#staticprop)
- [Methods](ClassWithModifiers.md#methods)
  - [privateMethod()](ClassWithModifiers.md#privatemethod)
  - [publicMethod()](ClassWithModifiers.md#publicmethod)
  - [staticMethod()](ClassWithModifiers.md#staticmethod)

## Constructors

### new ClassWithModifiers()

> **new ClassWithModifiers**(): [\`ClassWithModifiers\`](ClassWithModifiers.md)

## Properties

### privateProp

> **\`private\`** **privateProp**: \`string\`

Comments for privateProp

#### Source

[classes.ts:111](source-url)

***

### protectedProp

> **\`protected\`** **protectedProp**: \`string\`

Comments for protectedProp

#### Source

[classes.ts:121](source-url)

***

### publicPropWithDefault

> **publicPropWithDefault**: \`string\` = \`'propWithDefault'\`

Comments for propWithDefault

#### Source

[classes.ts:126](source-url)

***

### readonlyProp

> **\`readonly\`** **readonlyProp**: \`string\`

Comments for abstractProperty

#### Source

[classes.ts:116](source-url)

***

### staticProp

> **\`static\`** **staticProp**: \`string\`

Comments for staticProp

#### Source

[classes.ts:106](source-url)

## Methods

### privateMethod()

> **\`private\`** **privateMethod**(): \`void\`

Comment for privateMethod

#### Source

[classes.ts:138](source-url)

***

### publicMethod()

> **publicMethod**(): \`void\`

Comment for publicMethod

#### Source

[classes.ts:131](source-url)

***

### staticMethod()

> **\`static\`** **staticMethod**(): \`void\`

Comment for staticMethod

#### Source

[classes.ts:143](source-url)
"
`;

exports[`Class Reflection should compile class with modifiers: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

[API](../index.md) > ClassWithModifiers

# \`abstract\` ClassWithModifiers

Comments for ClassWithModifiers

## Contents

- [Constructors](ClassWithModifiers.md#constructors)
  - [new ClassWithModifiers()](ClassWithModifiers.md#new-classwithmodifiers)
- [Properties](ClassWithModifiers.md#properties)
- [Methods](ClassWithModifiers.md#methods)
  - [privateMethod()](ClassWithModifiers.md#privatemethod)
  - [publicMethod()](ClassWithModifiers.md#publicmethod)
  - [staticMethod()](ClassWithModifiers.md#staticmethod)

## Constructors

### new ClassWithModifiers()

\`\`\`ts
new ClassWithModifiers(): ClassWithModifiers
\`\`\`

## Properties

| Modifier | Property | Type | Description |
| :------ | :------ | :------ | :------ |
| \`private\` | \`privateProp\` | \`string\` | Comments for privateProp |
| \`public\` | \`protectedProp\` | \`string\` | Comments for protectedProp |
| \`public\` | \`publicPropWithDefault\` | \`string\` | Comments for propWithDefault |
| \`readonly\` | \`readonlyProp\` | \`string\` | Comments for abstractProperty |
| \`static\` | \`staticProp\` | \`string\` | Comments for staticProp |

## Methods

### privateMethod()

\`\`\`ts
private privateMethod(): void
\`\`\`

Comment for privateMethod

***

### publicMethod()

\`\`\`ts
publicMethod(): void
\`\`\`

Comment for publicMethod

***

### staticMethod()

\`\`\`ts
static staticMethod(): void
\`\`\`

Comment for staticMethod

***

Generated using [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown) and [TypeDoc](https://typedoc.org/)
"
`;

exports[`Class Reflection should compile class with type parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"**typedoc-stubs** ∙ [README](../README.md) ∙ [API](../exports.md)

***

[API](../exports.md) > ClassWithTypeParameters

# Class: ClassWithTypeParameters\`<A, B, C>\`

Comments for ClassWithTypeParameters

## Contents

- [Type parameters](ClassWithTypeParameters.md#type-parameters)
- [Constructors](ClassWithTypeParameters.md#constructors)
  - [new ClassWithTypeParameters()](ClassWithTypeParameters.md#new-classwithtypeparameters)

## Type parameters

▪ **A**

Comments for param A

▪ **B** extends \`string\`

Comments for param B

▪ **C** = \`boolean\`

## Constructors

### new ClassWithTypeParameters()

> **new ClassWithTypeParameters**\\<\`A\`, \`B\`, \`C\`\\>(): [\`ClassWithTypeParameters\`](ClassWithTypeParameters.md)\\<\`A\`, \`B\`, \`C\`\\>
"
`;

exports[`Class Reflection should compile class with type parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

[API](../index.md) > ClassWithTypeParameters

# ClassWithTypeParameters\`<A, B, C>\`

Comments for ClassWithTypeParameters

## Contents

- [Type parameters](ClassWithTypeParameters.md#type-parameters)
- [Constructors](ClassWithTypeParameters.md#constructors)
  - [new ClassWithTypeParameters()](ClassWithTypeParameters.md#new-classwithtypeparameters)

## Type parameters

| Parameter | Default | Description |
| :------ | :------ | :------ |
| \`A\` | - | Comments for param A |
| \`B\` extends \`string\` | - | Comments for param B |
| \`C\` | \`boolean\` | - |

## Constructors

### new ClassWithTypeParameters()

\`\`\`ts
new ClassWithTypeParameters<A, B, C>(): ClassWithTypeParameters<A, B, C>
\`\`\`

***

Generated using [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown) and [TypeDoc](https://typedoc.org/)
"
`;

exports[`Class Reflection should compile derived class: (Output File Strategy "members") (Option Group "1") 1`] = `
"**typedoc-stubs** ∙ [README](../README.md) ∙ [API](../exports.md)

***

[API](../exports.md) > DerivedClassA

# Class: DerivedClassA

Comments for DerivedClassA

## Contents

- [Extends](DerivedClassA.md#extends)
- [Constructors](DerivedClassA.md#constructors)
  - [new DerivedClassA()](DerivedClassA.md#new-derivedclassa)
- [Properties](DerivedClassA.md#properties)
  - [abstractProp](DerivedClassA.md#abstractprop)
  - [derivedProp](DerivedClassA.md#derivedprop)
- [Methods](DerivedClassA.md#methods)
  - [abstractMethod()](DerivedClassA.md#abstractmethod)
  - [derivedMethod()](DerivedClassA.md#derivedmethod)

## Extends

- [\`AbstractClass\`](AbstractClass.md)

## Constructors

### new DerivedClassA()

> **new DerivedClassA**(): [\`DerivedClassA\`](DerivedClassA.md)

#### Inherited from

[\`AbstractClass\`](AbstractClass.md).[\`constructor\`](AbstractClass.md#constructors)

## Properties

### abstractProp

> **abstractProp**: \`string\` = \`'abstractProp'\`

Comments for abstractProp

#### Overrides

[\`AbstractClass\`](AbstractClass.md).[\`abstractProp\`](AbstractClass.md#abstract-abstractprop)

#### Source

[classes.ts:21](source-url)

***

### derivedProp

> **derivedProp**: \`string\`

#### Source

[classes.ts:22](source-url)

## Methods

### abstractMethod()

> **abstractMethod**(): \`string\`

Comments for abstractMethod

#### Overrides

[\`AbstractClass\`](AbstractClass.md).[\`abstractMethod\`](AbstractClass.md#abstract-abstractmethod)

#### Source

[classes.ts:23](source-url)

***

### derivedMethod()

> **derivedMethod**(): \`string\`

#### Source

[classes.ts:26](source-url)
"
`;

exports[`Class Reflection should compile derived class: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

[API](../index.md) > DerivedClassA

# DerivedClassA

Comments for DerivedClassA

## Contents

- [Extends](DerivedClassA.md#extends)
- [Constructors](DerivedClassA.md#constructors)
  - [new DerivedClassA()](DerivedClassA.md#new-derivedclassa)
- [Properties](DerivedClassA.md#properties)
- [Methods](DerivedClassA.md#methods)
  - [abstractMethod()](DerivedClassA.md#abstractmethod)
  - [derivedMethod()](DerivedClassA.md#derivedmethod)

## Extends

- [\`AbstractClass\`](AbstractClass.md)

## Constructors

### new DerivedClassA()

\`\`\`ts
new DerivedClassA(): DerivedClassA
\`\`\`

#### Inherited from

[\`AbstractClass\`](AbstractClass.md).[\`constructor\`](AbstractClass.md#constructors)

## Properties

| Property | Type | Description | Inheritance |
| :------ | :------ | :------ | :------ |
| \`abstractProp\` | \`string\` | Comments for abstractProp | [\`AbstractClass\`](AbstractClass.md).\`abstractProp\` |
| \`derivedProp\` | \`string\` | - | - |

## Methods

### abstractMethod()

\`\`\`ts
abstractMethod(): string
\`\`\`

Comments for abstractMethod

#### Overrides

[\`AbstractClass\`](AbstractClass.md).[\`abstractMethod\`](AbstractClass.md#abstract-abstractmethod)

***

### derivedMethod()

\`\`\`ts
derivedMethod(): string
\`\`\`

***

Generated using [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown) and [TypeDoc](https://typedoc.org/)
"
`;
