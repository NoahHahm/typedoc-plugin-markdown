// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[partial: breadcrumbs]

# Class: ClassWithTypeParams<T, V\\>

[partial: comment]

**Type parameters**

- \`T\`
- \`V\`


[partial: toc]

[partial: members]"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"> **functionWithTypeParam**<\`A\`\\>(): \`boolean\`

**Type parameters**

- \`A\`


**Returns**

\`boolean\`"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"> **functionWithTypeParams**<\`A\`, \`B\`, \`C\`\\>(): \`boolean\`

[partial: comment]

**Type parameters**

- \`A\` *extends* [\`ClassWithTypeParams\`](Modules.md#classwithtypeparams)<\`string\`, \`number\`, \`A\`\\>[partial: comment]
- \`B\` = \`string\` \\| \`boolean\`[partial: comment]
- \`C\` = \`string\`


**Returns**

\`boolean\`"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
">  **genericsWithDefaults**: 

[partial: sources]"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
">  **nestedGenerics**: [\`Generic1\`](Modules.md#generic1)<[\`Generic2\`](Modules.md#generic2)<[\`Generic3\`](Modules.md#generic3)<\`string\`\\>\\>\\>

[partial: sources]"
`;
