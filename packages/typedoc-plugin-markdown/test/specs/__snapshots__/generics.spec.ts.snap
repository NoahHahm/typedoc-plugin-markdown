// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[partial: header]

[partial: breadcrumbs]

# Class: ClassWithTypeParams\`<T, V>\`

[partial: comment]

[partial: members]

___
Generated using [TypeDoc](https://typedoc.org/) and [typedoc-plugin-markdown](https://www.npmjs.com/package/typedoc-plugin-markdown)"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"> **functionWithTypeParam**\\<\`A\`\\>(): \`boolean\`

## Type parameters


| Parameter |
| :------ |
| \`A\` |


## Returns

\`boolean\`



[partial: sources]"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"> **functionWithTypeParams**\\<\`A\`, \`B\`, \`C\`, \`D\`\\>(): \`boolean\`

[partial: comment]

## Type parameters


| Parameter | Default | Description |
| :------ | :------ | :------ |
| \`A\` | - | [partial: comment] |
| \`B\` *extends* [\`ClassWithTypeParams\`](classes/class.ClassWithTypeParams.md)\\< \`string\`, \`number\` \\> | - | [partial: comment] |
| \`C\` | \`string\` \\| \`boolean\` | - |
| \`D\` | \`string\` | - |


## Returns

\`boolean\`



[partial: comment]

[partial: sources]"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
"> **genericsWithDefaults**

[partial: sources]

"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
"> **nestedGenerics**: [\`Generic1\`](type-aliases/type-alias.Generic1.md)\\< [\`Generic2\`](type-aliases/type-alias.Generic2.md)\\< [\`Generic3\`](type-aliases/type-alias.Generic3.md)\\< \`string\` \\> \\> \\>

[partial: sources]

"
`;
