// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[partial: breadcrumbs]

# ClassWithTypeParams\\<T, V\\>

**\`Class\`**

[partial: comment]

[partial: sources]

## Type parameters


| Parameter |
| :------ |
| T |
| V |


[partial: members]"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"> **functionWithTypeParam**\\<A\\>(): \`boolean\`

[partial: sources]

## Type parameters


| Parameter |
| :------ |
| A |


## Returns

\`boolean\`

"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"> **functionWithTypeParams**\\<A, B, C, D\\>(): \`boolean\`

[partial: comment]

[partial: sources]

## Type parameters


| Parameter | Default | Description |
| :------ | :------ | :------ |
| A | - | [partial: comment] |
| B *extends* [\`ClassWithTypeParams\`](classes/class.ClassWithTypeParams.md)\\<\`string\`, \`number\`, \`B\`\\> | - | [partial: comment] |
| C | \`string\` \\| \`boolean\` | - |
| D | \`string\` | - |


## Returns

\`boolean\`

"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
"> **genericsWithDefaults**

[partial: sources]

"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
"> **nestedGenerics**: [\`Generic1\`](types/type-alias.Generic1.md)\\<[\`Generic2\`](types/type-alias.Generic2.md)\\<[\`Generic3\`](types/type-alias.Generic3.md)\\<\`string\`\\>\\>\\>

[partial: sources]

"
`;
